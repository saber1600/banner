/* modified by hzshaoyy@corp.netease.com */(function($){jQuery.fn.slides=function(option){    option=jQuery.extend({},jQuery.fn.slides.option,option);    //合并属性,和 option=jQuery.extend(jQuery.fn.slides.option,option); 效果相同	/*	jQuery.fn.slides.option 为设置的默认属性	option是引用这个函数时传入的属性，option在后面，属性优先	*/    /*合并属性语法    var empty = {}	var defaults = { validate: false, limit: 5, name: "foo" };	var options = { validate: true, name: "bar" };	var settings = $.extend(empty, defaults, options);	settings == { validate: true, limit: 5, name: "bar" }    empty == { validate: true, limit: 5, name: "bar" }    */	    return this.each(function(){		//this指代$('#slides')        $('.'+option.container,$(this)).children().wrapAll('<div class="slides_control"/>');        //等效 $(".slides_container").children().wrapAll('<div class="slides_control"/>'); 		//给.slides_container子元素套上一层        //wrapAll()语法：在所有匹配元素外面包一层HTML结构				/*		申明变量		elem=$('#slides')		control=$('.slides_control')		total=$(".slide").size()		height=$(".slide").outerHeight()		effect=slide		*/        var w_w=$(window).width(),//计算浏览器宽度        elem=$(this),//this先保存在elem中，elem=$(this)=$('#slides')        control=$('.slides_control',elem),//control=$('.slides_control')        total=control.children().size(),        //size()返回的jQuery对象匹配的DOM元素的数量        //control.children() 就是<div class="slide">里面的元素，total是这个元素的个数		//total=$(".slide").size()        width=w_w,//width=$(window).width()        height=control.children().outerHeight(),//$(".slide").outerHeight()		//outerHeight()为匹配的元素集合中获取第一个元素的当前计算高度值        start=option.start-1,        //start:1 下面定义的默认值，start表示新加载时展示哪一张图片        effect=option.effect.indexOf(',')<0?option.effect:option.effect.replace(' ','').split(',')[0],        //effect:'slide'; option.effect.indexOf(',')值为-1；effect=option.effect        //indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置，没有则返回-1        paginationEffect=option.effect.indexOf(',')<0?effect:option.effect.replace(' ','').split(',')[1],        //如果effect:'slide,fade', paginationEffect=slide2；这里effect=paginationEffect=slide        //effect:可以设置2个参数，设置两个参数时effect为参数一，paginationEffect为参数二，只有一个参数时effect=paginationEffect        next=0,prev=0,number=0,current=0,        loaded,active,clicked,position,direction,imageParent,pauseTimeout,playInterval;		/*		初始化样式设置，$("#caption")和$('.slides_container')		*/        control.children().children('#caption').css({            left:w_w/2+160+'px'        });        //图片上面小图片的位置        elem.children('.slides_container').css({            width:w_w        });        //.slides_container 盒子的宽度，这里是铺平整个屏幕        				/*		图片只有一张时执行的函数		*/        if(total<2){//如果<div class="slide">的数量小于2            $('.'+option.container,$(this)).fadeIn(option.fadeSpeed,option.fadeEasing,function(){                loaded=true;                option.slidesLoaded();            });			//效果是新加载页面时延迟fadeSpeed秒，通过fadeEasing函数显示$(".slides_container")内容            //option.fadeEasing中默认值fadeEasing:''            //fadeIn()设置了速度和设置完毕将loaded设置为true，其他的默认值为空            $('.'+option.next+', .'+option.prev).fadeOut(0);            //隐藏上一张和下一张的按钮            //只有一张图片时，只显示一张图片，没有后面效果            return false;        }		/*		动画函数		*/        function animate(direction,effect,clicked){        //animate("next",effect);effect为$(".slide")            if(!active&&loaded){                active=true;                option.animationStart(current+1);                //默认值为animationStart:function(){},                //传入值为animationStart: function(current){ jQuery('.caption').hide();}下一张图片的文字隐藏                                /*                根据点击的内容，设置position，direction，current参数                */                switch(direction){                    case'next'://点击下一张                        prev=current;                        next=current+1;                        next=total===next?0:next;                        position=width*2;                        direction=-width*2;                        current=next;                        break;                    case'prev'://点击上一张                        prev=current;                        next=current-1;                        next=next===-1?total-1:next;                        position=0;                        direction=0;                        current=next;                        break;                    case'pagination'://点击其他一张                        next=parseInt(clicked,10);                        //clicked解析为10位数                        prev=$('.'+option.paginationClass+' li.'+option.currentClass+' a',elem).attr('href').match('[^#/]+$');                        //paginationClass:'pagination',                        //pagination是 <div class="m-slul f-pr">下面生成的html，包含4个<li>                        //currentClass:'current',正在显示的<li class="current"><a href="#1">2</a></li>                        //这里的prev=current                        if(next>prev){                            position=width*2;                            direction=-width*2;                        }else{                            position=0;                            direction=0;                        }                        current=next;                        break;                }                /*                分为fade隐藏效果和silde滑动效果fade为隐藏的效果                */                if(effect==='fade'){                //false                    if(option.crossfade){                    //从右往左刷的效果                        control.children(':eq('+next+')',elem).css({                            zIndex:10                        }).fadeIn(option.fadeSpeed,option.fadeEasing,function(){                            if(option.autoHeight){                                control.animate({                                    height:control.children(':eq('+next+')',elem).outerHeight()                                },option.autoHeightSpeed,function(){                                    control.children(':eq('+prev+')',elem).css({                                        display:'none',                                        zIndex:0                                    });                                    control.children(':eq('+next+')',elem).css({                                        zIndex:0                                    });                                    option.animationComplete(next+1);                                    active=false;                                });                            }else{                                control.children(':eq('+prev+')',elem).css({                                    display:'none',                                    zIndex:0                                });                                control.children(':eq('+next+')',elem).css({                                    zIndex:0                                });                                option.animationComplete(next+1);                                active=false;                            }                        });                    }else{                        control.children(':eq('+prev+')',elem).fadeOut(option.fadeSpeed,option.fadeEasing,function(){                            if(option.autoHeight){                                control.animate({                                    height:control.children(':eq('+next+')',elem).outerHeight()                                },option.autoHeightSpeed,                                function(){                                    control.children(':eq('+next+')',elem).fadeIn(option.fadeSpeed,option.fadeEasing);                                });                            }else{                                control.children(':eq('+next+')',elem).fadeIn(option.fadeSpeed,option.fadeEasing,function(){                                    if(jQuery.browser.msie){                                        $(this).get(0).style.removeAttribute('filter');                                    }                                });                            }                            option.animationComplete(next+1);                            active=false;                        });                    }                /*                目前执行的这段                */                }else{                //effect!='fade                	/*                	设置点击元素的样式                	*/                    control.children(':eq('+next+')').css({                        left:position,                        display:'block'                    });//将点击的这个当前current=next $(".slide")设置样式，left:2*width(点击下一步),在浏览器右侧，显示出来                    //eq是css3选择器，control.children(':eq('+next+')')下一个元素的<div class="slide">                                      /*                                      */                    if(option.autoHeight){                    //默认设置autoHeight:false,                        control.animate({                            left:direction,                            height:control.children(':eq('+next+')').outerHeight()                        },option.slideSpeed,option.slideEasing,function(){                        control.css({                            left:-width                        });                        control.children(':eq('+next+')').css({                            left:width,                            zIndex:5                        });                        control.children(':eq('+prev+')').css({                            left:width,                            display:'none',                            zIndex:0                        });                        option.animationComplete(next+1);                        active=false;                        });                    }else{                    //默认为autoHeight:false,所以执行下面内容                        control.animate({                        	/*                        	设置动画样式，$('.slides_control')元素整体移动                        	*/                            left:direction//$('.slides_control') left:-width*2(点击下一步)                        },option.slideSpeed,option.slideEasing,function(){                            /*                            动画效果执行完，修改样式                            */                            control.css({                                left:-width//$('.slides_control') 回到初始状态                            });                            control.children(':eq('+next+')').css({                                left:width,//当前的$('.slide')移动到中间位置                                zIndex:5                            });                            control.children(':eq('+prev+')').css({                                left:width,//上一个$('.slide')回到初始位置                                display:'none',//设置为隐藏                                zIndex:0                            });                            option.animationComplete(next+1);                            active=false;//开关作用                        });                    }                }                if(option.pagination){                    $('.'+option.paginationClass+' li.'+option.currentClass,elem).removeClass(option.currentClass);                    $('.'+option.paginationClass+' li:eq('+next+')',elem).addClass(option.currentClass);                }            }        }		/*		停止函数		*/        function stop(){            clearInterval(elem.data('interval'));        }        		/*		中断函数		*/        function pause(){            if(option.pause){            //pause传入值为2800                clearTimeout(elem.data('pause'));                clearInterval(elem.data('interval'));                pauseTimeout=setTimeout(function(){                    clearTimeout(elem.data('pause'));                    playInterval=setInterval(function(){                        animate("next",effect);                    },option.play);                    elem.data('interval',playInterval);                },option.pause);                elem.data('pause',pauseTimeout);            }else{                stop();            }        }        				if(total<2){            return;        }//如果<div class="slide">的数量小于2	        if(start<0){            start=0;        }//start初始值为1，start=option.start-1执行完毕后为0        if(start>total){            start=total-1;        }//处理不正确的start初始值        if(option.start){            current=start;        }//如果初始值存在，初始值为当前值current                /*        是否随即显示，默认值为false        */        if(option.randomize){            control.randomize();//randomize()为随即显示函数        }                /*        初始化样式布局，很重要        */        $('.'+option.container,elem).css({            overflow:'hidden',            position:'relative'        });//$(".slides_container") 超出部分隐藏，并设置position:'relative'        control.children().css({            position:'absolute',            top:0,            left:width,            width:width,            zIndex:0,            display:'none'        });//给$(".slide")设置样式，全部放在浏览器中间位置，都隐藏。虽然为left:width，但是是相对定位与$('.slides_control')的，这个的left:-width，所以left:width为中部        control.css({            position:'relative',            width:(width*3),            height:height,            left:-width        });//js添加框$('.slides_control')设置样式，width:(width*3)，left:-width，分为3块，浏览器左中右均一个        $('.'+option.container,elem).css({            display:'block'        });//$(".slides_container") 设置样式显示，之前在css中设置为隐藏了                /*        如果$('.slides_control')高度不确定，将显示块$(".slide")设置为自动高度，然后获取传给$('.slides_control')        */        if(option.autoHeight){        //默认false            control.children().css({            //$(".slide")设高度            	height:'auto'            });            control.animate({            //$('.slides_control')执行动画效果                height:control.children(':eq('+start+')').outerHeight()                //获取$(".slide")在浏览器中的高度，用来给$('.slides_control')设置高度            },option.autoHeightSpeed);        }		/*		图片大于2张时正常加载		*/        if(option.preload&&control.find('img:eq('+start+')').length){        //传入的参数设置preload为true		//control.find('img:eq(0)').length=1存在            $('.'+option.container,elem).css({            // .slides_container                background:'url('+option.preloadImage+') no-repeat 50% 50%'                //加载的缓冲图片            });            var img=control.find('img:eq('+start+')').attr('src')+'?'+(new Date()).getTime();			//img=images/20120718115508d742a.jpg?1345529737438						/*						*/            if($('img',elem).parent().attr('class')!='slides_control'){			//为true                imageParent=control.children(':eq(0)')[0].tagName.toLowerCase();				//imageParent=div            }else{                imageParent=control.find('img:eq('+start+')');				//imageParent=img[0]            }			            control.find('img:eq('+start+')').attr('src',img).load(function(){			//为img[0]设置属性src，加载成功后执行函数                control.find(imageParent+':eq('+start+')').fadeIn(option.fadeSpeed,option.fadeEasing,function(){                    //control.find(imageParent+':eq('+start+')') 为 $('.slide')[0]					$(this).css({                        zIndex:5                    });//设置正在显示的图片为index-z：5，此时left为width                    $('.'+option.container,elem).css({                        background:''                    });//删除缓冲背景图片                    loaded=true;                    option.slidesLoaded();					/* 参数传入的函数，效果为显示左上角的文字介绍					slidesLoaded: function() {						jQuery('.caption').fadeIn(800);					} 					*/                });            });        }else{            control.children(':eq('+start+')').fadeIn(option.fadeSpeed,option.fadeEasing,function(){                loaded=true;                option.slidesLoaded();            });        }				/*		点击图片切换下一张峥		*/        if(option.bigTarget){        //bigTarget默认为false            control.children().css({            //control.children()为$(".slide")                cursor:'pointer'            });            control.children().click(function(){                animate('next',effect);                return false;            });        }				/*		鼠标放到图片上时循环停止		*/        if(option.hoverPause&&option.play){        //传入参数hoverPause为true，play=5000            control.bind('mouseover',function(){                stop();            });            control.bind('mouseleave',function(){                pause();            });        }		/*		动态加载上一步下一步按钮		*/        if(option.generateNextPrev){        //默认值为false，html代码中以近有上一步下一步内容            $('.'+option.container,elem).after('<a href="#" class="'+option.prev+'">Prev</a>');            $('.'+option.prev,elem).after('<a href="#" class="'+option.next+'">Next</a>');        }		/*		点击上一张和下一张图片时触发，切换图片效果		*/        $('.'+option.next,elem).click(function(e){        //传入参数 .ocnext 切换下一张图片            e.preventDefault();            //阻止默认事件            if(option.play){            //paly参数为5000                pause();            }            animate('next',effect);        });        $('.'+option.prev,elem).click(function(e){        //传入参数 .ocprev 切换上一张图片            e.preventDefault();            if(option.play){            //paly参数为5000                pause();            }            animate('prev',effect);        });        /*        插入目录切换按钮        */        if(option.generatePagination){            //generatePagination默认值为true            if(option.prependPagination){            //默认为false,向$(".m-slul")内容的后部分插入内容                elem.children('.m-slul').prepend('<ul class='+option.paginationClass+'></ul>');            }else{                elem.children('.m-slul').append('<ul class='+option.paginationClass+'></ul>');            }            control.children().each(function(){                $('.'+option.paginationClass,elem).append('<li><a href="#'+number+'">'+(number+1)+'</a></li>');                //.pagination 下面添加块的数量                number++;            });        }else{        //待理解,好像是html中如果有这个存在这个样式就只需要在样式上面添加属性            $('.'+option.paginationClass+' li a',elem).each(function(){                $(this).attr('href','#'+number);                number++;            });        }		/*		为pagination li 添加当前样式		*/        $('.'+option.paginationClass+' li:eq('+start+')',elem).addClass(option.currentClass);		/*		点击导航目录时执行切换页面		*/        $('.'+option.paginationClass+' li a',elem).click(function(){            if(option.play){            	//option.play==5000                pause();            }            clicked=$(this).attr('href').match('[^#/]+$');            //用正则取出当前点击的数字            if(current!=clicked){                animate('pagination',paginationEffect,clicked);            }            return false;        });        /*        $(".link").length==0        暂时没有发现作用，和上面的一段功能完全一样，应该也是html中可能存在时使用的        */        $('a.link',elem).click(function(){            if(option.play){                pause();            }            clicked=$(this).attr('href').match('[^#/]+$')-1;            if(current!=clicked){                animate('pagination',paginationEffect,clicked);            }            return false;        });        /*        如果没有操作，自动循环播放函数        */        if(option.play){        //play参数为5000            playInterval=setInterval(function(){                animate('next',effect);            },option.play);            elem.data('interval',playInterval);        };        /*        是否在浏览器页面改变大小是重新判断布局        */        if(option.resizeWd){        //传入参数为true            $(window).resize(function(){                var wid_w=$(window).width();                control.children().css({                    left:wid_w,                    width:wid_w                });                control.css({                    width:(wid_w*3),                    left:-wid_w                });                control.children().children('#caption').css({                    left:wid_w/2+160+'px'                });                elem.children('.slides_container').css({                    width:wid_w                });            });        }    });};/*以上都是return返回值*/jQuery.fn.slides.option={    preload:false,//加载图片是否设置缓冲图片    preloadImage:'/img/loading.gif',//缓冲的图片    container:'slidesContainer',//整个展示框的div    generateNextPrev:false,//是否动态加载上一步，下一步按钮    next:'next',//下一峥的类名，默认为next    prev:'prev',//上一峥的类名，默认为prev    pagination:true,    generatePagination:true,//图片点击切换，false则不显示下面切换块而且不能切换    prependPagination:false, //generatePagination为true时，像$(".m-slul")插入的内容是在前半部分还是后半部分    paginationClass:'pagination', //切换块的样式    currentClass:'current',//切换块 li 的样式    fadeSpeed:350,//出现时延迟的速度    fadeEasing:'',//延迟出现的缓动函数    slideSpeed:350,//动画的速度    slideEasing:'',//动画的运动函数    start:1,//新加载时展示哪一张图片    effect:'slide',//切换时效果的类型，slide为移动，fade为隐藏, effect:'slide,fade';为两个效果同时存在    crossfade:true,//fade效果时，为刷子效果    randomize:false,//刷新页面时切换块随机显示    play:0,//播放时的间隔    pause:0,    hoverPause:false,//鼠标放到图片上，停止循环    autoHeight:false,//自动获取高度（css中没有设置），会有下拉瀑布加载图片的效果    autoHeightSpeed:350,//整个横目自动获取高度的时间    bigTarget:false,//点击图片切换下一峥    resizeWd:false,//浏览器大小改变时，重新布局    animationStart:function(){},    animationComplete:function(){},    slidesLoaded:function(){}};/*随机排列展示内容*/jQuery.fn.randomize=function(callback){    function randomizeOrder(){return(Math.round(Math.random())-0.5);}    return($(this).each(function(){        var $this=$(this);        var $children=$this.children();        var childCount=$children.length;        if(childCount>1){            $children.hide();            var indices=[];            for(i=0;i<childCount;i++){indices[indices.length]=i;}            indices=indices.sort(randomizeOrder);            jQuery.each(indices,function(j,k){                var $child=$children.eq(k);                var $clone=$child.clone(true);                $clone.show().appendTo($this);                if(callback!==undefined){                    callback($child,$clone);                }                $child.remove();            });        }    }));};})(jQuery);